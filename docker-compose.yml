version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    ports:
      - 5672:5672
      - 15672:15672

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
#    container_name: elasticsearch-service
#    environment:
#      - node.name=elasticsearch
#      - cluster.name=es-docker-cluster
#      - cluster.initial_master_nodes=elasticsearch
#      - bootstrap.memory_lock=true
#      - xpack.security.enabled=false
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    ports:
#      - 9200:9200

#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.8.0
#    container_name: kibana-service
#    ports:
#      - 5601:5601
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch:9200
#      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
#    depends_on:
#      - elasticsearch

#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.8.0
#    container_name: logstash-service
#    command: logstash -f /usr/share/logstash/pipeline
#    volumes:
#      - ./logstash-config/config:/usr/share/logstash/config:ro
#      - ./logstash-config/pipeline:/usr/share/logstash/pipeline:ro
#    ports:
#      - 5000:5000
#      - 12204:12204
#    depends_on:
#      - elasticsearch

  mysql:
    image: mysql:latest
    container_name: users-mysql
    ports:
      - 3306:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: users_db-user
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: users_db
    volumes:
      - mysql-database-data-volume:/var/lib/mysql

  postgres:
    image: postgres:latest
    container_name: tests-postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: testsdb
      POSTGRES_USER: testsdb-user
      POSTGRES_PASSWORD: test
    volumes:
      - postgres-database-data-volume:/var/lib/postgresql/data/

  config-service:
    image: norik766/tms-config-service
    container_name: config-service
    build:
      context: ./config-service
      dockerfile: Dockerfile
    ports:
      - 7001:7001
    depends_on:
      - rabbitmq
    links:
      - rabbitmq:rabbitmq


  discovery-service:
    image: norik766/tms-discovery-service
    container_name: discovery-service
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    ports:
      - 7002:7002
    depends_on:
      - config-service
    links:
      - config-service:config-service
      - rabbitmq:rabbitmq

  gateway-service:
    image: norik766/tms-gateway-service
    container_name: gateway-service
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - 7003:7003
    depends_on:
      - discovery-service
      - config-service
    links:
      - config-service:config-service
      - discovery-service:discovery-service
      - rabbitmq:rabbitmq

  users-service:
    image: norik766/tms-users-service
    container_name: users-service
    build:
      context: ./users-service
      dockerfile: Dockerfile
    ports:
      - 7004:7004
    depends_on:
      - discovery-service
      - mysql
      - config-service
    environment:
      RDS_HOSTNAME: mysql
      RDS_PORT: 3306
      RDS_DB_NAME: users_db
      RDS_USERNAME: users_db-user
      RDS_PASSWORD: test
      GATEWAY_HOST: gateway-service
    links:
      - gateway-service:gateway-service
      - config-service:config-service
      - discovery-service:discovery-service
      - rabbitmq:rabbitmq

  tests-service:
    image: norik766/tms-tests-service
    container_name: tests-service
    build:
      context: ./tests-service
      dockerfile: Dockerfile
    ports:
      - 7005:7005
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: testsdb
      POSTGRES_USER: testsdb-user
      POSTGRES_PASSWORD: test
    depends_on:
      - postgres
      - discovery-service
      - config-service
    links:
      - config-service:config-service
      - discovery-service:discovery-service
      - rabbitmq:rabbitmq

volumes:
  mysql-database-data-volume:
  postgres-database-data-volume: